{
    "AWSTemplateFormatVersion":"2010-09-09",
    "Description":"Demo EC2",
    "Parameters":{
        "KeyP":{
            "Type":"AWS::EC2::KeyPair::KeyName",
            "Description":"Please select Key"
        },
        "InstanceType":{
            "Type":"String",
            "AllowedValues":["t2.micro","t2.small","t2.medium"],
            "Description":"Select the Instance Type"
        }
    },
    "Mappings":{
        "RegionMap":{
            "us-east-1":{
                "micro":"ami-026c8acd92718196b"
            },
            "us-west-2":{
                "micro":"ami-068670db424b01e9a"
            }
        }
    },
    "Resources":{
        "DemoEC2":{
            "Type": "AWS::EC2::Instance",
            "DependsOn":"DemoVpc",
            "Properties":{
                "ImageId":{
                    "Fn::FindInMap":[
                        "RegionMap",{"Ref":"AWS::Region"},"micro"
                    ]
                },
                "InstanceType":{"Ref":"InstanceType"},
                "KeyName":{
                    "Ref":"KeyP"
                },
                "Tags":[
                    {
                        "Key":"Name",
                        "Value":{"Fn::Join":[",",["Demo","EC2 for ",{"Ref":"AWS::Region"}," and for stack ",{"Ref":"AWS::StackName"}]]}
                    }
                ],
                "UserData" : {"Fn::Base64" : { "Fn::Join" : ["",[
                    "#!/bin/bash","\n",
                    "\n","apt-get update","\n",
                    "\n","apt-get install -y apt-transport-https ca-certificates curl gnupg lsb-release","\n",
                    "\n","curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg","\n",
                    "\n","apt-get update","\n",
                    "\n","echo deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable | sudo tee /etc/apt/sources.list.d/docker.list >/dev/null","\n",
                    "\n","apt-get update","\n",
                    "\n","apt-get install -y docker-ce docker-ce-cli containerd.io","\n",
                    "\n","curl -L https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m) -o /usr/local/bin/docker-compose","\n",
                    "\n","chmod +x /usr/local/bin/docker-compose","\n"
                    ]]}
              },
                "NetworkInterfaces":[
                    {
                        "AssociatePublicIpAddress": "true",
                        "DeviceIndex": "0",
                        "GroupSet": [{ "Ref" : "EC2SG" }],
                        "SubnetId": { "Ref" : "DemoSubnetPublic" }
                    }
                ]
            }

        },
        "EC2SG":{
            "Type":"AWS::EC2::SecurityGroup",
            "DependsOn":"DemoVpc",
            "Properties":{
                "GroupDescription":"Security Group for EC2",
                "VpcId":{
                    "Ref":"DemoVpc"
                },
                "SecurityGroupIngress":[
                    {
                        "IpProtocol":"tcp",
                        "CidrIp":"0.0.0.0/0",
                        "ToPort":"80",
                        "FromPort":"80"
                    },
                    {
                        "IpProtocol":"tcp",
                        "CidrIp":"0.0.0.0/0",
                        "ToPort":"22",
                        "FromPort":"22"
                    },
                    {
                        "IpProtocol":"tcp",
                        "CidrIp":"0.0.0.0/0",
                        "ToPort":"80",
                        "FromPort":"80"
                    },
                    {
                        "IpProtocol":"tcp",
                        "CidrIp":"0.0.0.0/0",
                        "ToPort":"8080",
                        "FromPort":"8080"
                    },
                    {
                        "IpProtocol":"tcp",
                        "CidrIp":"0.0.0.0/0",
                        "ToPort":"61000",
                        "FromPort":"32768"
                    },
                    {
                        "IpProtocol":"tcp",
                        "CidrIp":"0.0.0.0/0",
                        "ToPort":"443",
                        "FromPort":"443"
                    }
                ],
                "SecurityGroupEgress":[
                    {
                        "CidrIp":"0.0.0.0/0",
                        "ToPort":"-1",
                        "IpProtocol":"-1"
                    }
                ]
            }
        },
        "DemoIG":{
            "Type":"AWS::EC2::InternetGateway",
            "DependsOn":"DemoVpc",
            "Properties":{
                "Tags":[
                    {
                        "Key":"Name",
                        "Value":"DemoIg"
                    }
                ]
            }
        },
        "DemoRtPub":{
            "Type":"AWS::EC2::RouteTable",
            "DependsOn":"DemoVpc",
            "Properties":{
                "Tags":[
                    {
                        "Key":"Name",
                        "Value":"Demo Public RT"
                    }
                ],
                "VpcId":{"Ref":"DemoVpc"}
            }

        },
        "demoigattach":{
            "Type":"AWS::EC2::VPCGatewayAttachment",
            "DependsOn":["DemoVpc","DemoIG"],
            "Properties":{
                "InternetGatewayId" : {"Ref":"DemoIG"},
                "VpcId" : {"Ref":"DemoVpc"}
            }
        },
        "demoroute":{
            "Type":"AWS::EC2::Route",
            "DependsOn":["DemoIG","DemoRtPub"],
            "Properties":{
                "RouteTableId":{"Ref":"DemoRtPub"},
                "DestinationCidrBlock":"0.0.0.0/0",
                "GatewayId":{"Ref":"DemoIG"}
            }
        },
        "DemoVpc":{
            "Type":"AWS::EC2::VPC",
            "Properties":{
                "CidrBlock":"10.0.0.0/16",
                "EnableDnsHostnames":"true",
                "InstanceTenancy":"default",
                "Tags":[
                    {
                        "Key":"Name",
                        "Value":"Demo VPC 1"
                    }
                ]
            }

        },
        "DemoSubnetPublic":{
            "Type":"AWS::EC2::Subnet",
            "DependsOn":"DemoVpc",
            "Properties":{
                "AvailabilityZone":"us-east-1a",
                "CidrBlock":"10.0.0.0/24",
                "VpcId":{"Ref":"DemoVpc"},
                "Tags":[
                    {
                        "Key":"Name",
                        "Value":"DemoSubnetPub1"
                    }
                ]
            }
        },
        "DemoPublicNACL":{
            "Type":"AWS::EC2::NetworkAcl",
            "DependsOn":["DemoVpc","DemoSubnetPublic"],
            "Properties":{
                "Tags":[
                    {
                        "Key":"Name",
                        "Value":"DemoPublicNACL"
                    }
                ],
                "VpcId":{"Ref":"DemoVpc"}
            }
        },
        "DemoSubnetNaclAssoc":{
            "Type":"AWS::EC2::SubnetNetworkAclAssociation",
            "DependsOn":["DemoPublicNACL","DemoSubnetPublic"],
            "Properties":{
                "NetworkAclId" : {"Ref":"DemoPublicNACL"},
                "SubnetId" : {"Ref":"DemoSubnetPublic"}
            }
        },
        "PublicNACL1Entry":{
            "Type":"AWS::EC2::NetworkAclEntry",
            "DependsOn":"DemoPublicNACL",
            "Properties":{
                "RuleNumber":"10",
                "CidrBlock":"0.0.0.0/0",
                "Egress":false,
                "NetworkAclId":{"Ref":"DemoPublicNACL"},
                "PortRange":{"From":"22","To":"22"},
                "Protocol":"6",
                "RuleAction":"allow"
            }
        },
        "PublicNACL1Entry1":{
            "Type":"AWS::EC2::NetworkAclEntry",
            "DependsOn":"DemoPublicNACL",
            "Properties":{
                "RuleNumber":"10",
                "CidrBlock":"0.0.0.0/0",
                "Egress":true,
                "NetworkAclId":{"Ref":"DemoPublicNACL"},
                "Protocol":"-1",
                "RuleAction":"allow"
            }
        },
        "PublicNACL1Entry2":{
            "Type":"AWS::EC2::NetworkAclEntry",
            "DependsOn":"DemoPublicNACL",
            "Properties":{
                "RuleNumber":"20",
                "CidrBlock":"0.0.0.0/0",
                "Egress":false,
                "PortRange":{"From":"32768","To":"61000"},
                "NetworkAclId":{"Ref":"DemoPublicNACL"},
                "Protocol":"6",
                "RuleAction":"allow"
            }
        },
        "PublicNACL1Entry3":{
            "Type":"AWS::EC2::NetworkAclEntry",
            "DependsOn":"DemoPublicNACL",
            "Properties":{
                "RuleNumber":"30",
                "CidrBlock":"0.0.0.0/0",
                "Egress":false,
                "PortRange":{"From":"80","To":"80"},
                "NetworkAclId":{"Ref":"DemoPublicNACL"},
                "Protocol":"6",
                "RuleAction":"allow"
            }
        },
        "PublicNACL1Entry4":{
            "Type":"AWS::EC2::NetworkAclEntry",
            "DependsOn":"DemoPublicNACL",
            "Properties":{
                "RuleNumber":"40",
                "CidrBlock":"0.0.0.0/0",
                "Egress":false,
                "PortRange":{"From":"8080","To":"8080"},
                "NetworkAclId":{"Ref":"DemoPublicNACL"},
                "Protocol":"6",
                "RuleAction":"allow"
            }
        },
        "PublicNACL1Entry5":{
            "Type":"AWS::EC2::NetworkAclEntry",
            "DependsOn":"DemoPublicNACL",
            "Properties":{
                "RuleNumber":"50",
                "CidrBlock":"0.0.0.0/0",
                "Egress":false,
                "PortRange":{"From":"443","To":"443"},
                "NetworkAclId":{"Ref":"DemoPublicNACL"},
                "Protocol":"6",
                "RuleAction":"allow"
            }
        },
        "PublicNACLRtAssoc":{
            "Type":"AWS::EC2::SubnetRouteTableAssociation",
            "DependsOn":["DemoSubnetPublic","DemoRtPub"],
            "Properties":{
                "RouteTableId" : {"Ref":"DemoRtPub"},
                "SubnetId" : {"Ref":"DemoSubnetPublic"}
            }
        }
    },
    "Outputs":{
        "InstanceId":{
            "Description":"The instance",
            "Value":{
                "Ref":"DemoEC2"
            }
        },
        "Instanceip":{
            "Description":"Public IP",
            "Value":{
                "Fn::GetAtt":["DemoEC2","PublicIp"]
            }
        },
        "InstanceDns":{
            "Description":"Public Dns",
            "Value":{
                "Fn::GetAtt":["DemoEC2","PublicDnsName"]
            }
        }
    }
}